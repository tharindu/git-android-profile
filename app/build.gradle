apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.apollo'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.wordpress.tharindufit.gitprofile"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 2
        versionName "0.1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // Graph QL Runtime
    implementation 'com.apollographql.apollo:apollo-runtime:2.2.2'
    // Dagger 2 for Dependency Injection
    implementation 'com.google.dagger:dagger-android:2.33'
    implementation 'com.google.dagger:dagger-android-support:2.33'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.33'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.33'
    // Reactive Programming
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'
    // Card view
    implementation "androidx.cardview:cardview:1.0.0"
    // Network Images
    implementation 'com.squareup.picasso:picasso:2.71828'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${targetSdk}.+"
            }
        }
    }
}
